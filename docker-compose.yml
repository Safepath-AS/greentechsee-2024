version: "3.9"

services:
  app:
    image: ghcr.io/safepath-as/greentechsee-2024/app:latest
    networks:
      - nginx-proxy-network
    restart: always
    environment:
      - VIRTUAL_HOST=${APP_HOST}
      - LETSENCRYPT_HOST=${APP_HOST}
      - API_URL=https://${API_HOST}
  api:
    image: ghcr.io/safepath-as/greentechsee-2024/api:latest
    networks:
      - nginx-proxy-network
    restart: always
    environment:
      - VIRTUAL_HOST=${API_HOST}
      - LETSENCRYPT_HOST=${API_HOST}
      - CORS_ORIGINS=https://${APP_HOST}
      - DATABASE_URL=postgresql://greentechsee:${POSTGRES_PASSWORD}@database:${POSTGRES_PORT}/greentechsee
      - OPENAI_API_KEY=${OPENAI_API_KEY}
  database:
    image: postgres:13.3
    command: postgres -c 'max_connections=50'
    container_name: database
    networks:
      - nginx-proxy-network
    environment:
      POSTGRES_USER: greentechsee
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: greentechsee
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    volumes:
      - data:/var/lib/postgresql/data/

  # Load balancer
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    networks:
      - nginx-proxy-network
    ports:
      - 80:80
      - 443:443
    restart: always
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
  acme-companion:
    image: nginxproxy/acme-companion
    networks:
      - nginx-proxy-network
    restart: always
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs/:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:
  acme:
  data:

networks:
  nginx-proxy-network:
    name: nginx-proxy-network
